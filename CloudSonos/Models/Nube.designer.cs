#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudSonos.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CLOUDSONOS")]
	public partial class NubeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertalbum(album instance);
    partial void Updatealbum(album instance);
    partial void Deletealbum(album instance);
    partial void Insertalbumfav(albumfav instance);
    partial void Updatealbumfav(albumfav instance);
    partial void Deletealbumfav(albumfav instance);
    partial void Insertartistabanda(artistabanda instance);
    partial void Updateartistabanda(artistabanda instance);
    partial void Deleteartistabanda(artistabanda instance);
    partial void Insertcancionalbum(cancionalbum instance);
    partial void Updatecancionalbum(cancionalbum instance);
    partial void Deletecancionalbum(cancionalbum instance);
    partial void Insertcanciones(canciones instance);
    partial void Updatecanciones(canciones instance);
    partial void Deletecanciones(canciones instance);
    partial void Insertgeneros(generos instance);
    partial void Updategeneros(generos instance);
    partial void Deletegeneros(generos instance);
    partial void Insertintegrabanda(integrabanda instance);
    partial void Updateintegrabanda(integrabanda instance);
    partial void Deleteintegrabanda(integrabanda instance);
    partial void Insertplaylist(playlist instance);
    partial void Updateplaylist(playlist instance);
    partial void Deleteplaylist(playlist instance);
    partial void Insertplaylistcancion(playlistcancion instance);
    partial void Updateplaylistcancion(playlistcancion instance);
    partial void Deleteplaylistcancion(playlistcancion instance);
    partial void Insertsysdiagrams(sysdiagrams instance);
    partial void Updatesysdiagrams(sysdiagrams instance);
    partial void Deletesysdiagrams(sysdiagrams instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    #endregion
		
		public NubeDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CLOUDSONOSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NubeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NubeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NubeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NubeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<album> album
		{
			get
			{
				return this.GetTable<album>();
			}
		}
		
		public System.Data.Linq.Table<albumfav> albumfav
		{
			get
			{
				return this.GetTable<albumfav>();
			}
		}
		
		public System.Data.Linq.Table<artistabanda> artistabanda
		{
			get
			{
				return this.GetTable<artistabanda>();
			}
		}
		
		public System.Data.Linq.Table<cancionalbum> cancionalbum
		{
			get
			{
				return this.GetTable<cancionalbum>();
			}
		}
		
		public System.Data.Linq.Table<canciones> canciones
		{
			get
			{
				return this.GetTable<canciones>();
			}
		}
		
		public System.Data.Linq.Table<generos> generos
		{
			get
			{
				return this.GetTable<generos>();
			}
		}
		
		public System.Data.Linq.Table<integrabanda> integrabanda
		{
			get
			{
				return this.GetTable<integrabanda>();
			}
		}
		
		public System.Data.Linq.Table<playlist> playlist
		{
			get
			{
				return this.GetTable<playlist>();
			}
		}
		
		public System.Data.Linq.Table<playlistcancion> playlistcancion
		{
			get
			{
				return this.GetTable<playlistcancion>();
			}
		}
		
		public System.Data.Linq.Table<sysdiagrams> sysdiagrams
		{
			get
			{
				return this.GetTable<sysdiagrams>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuario
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.album")]
	public partial class album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Album;
		
		private string _nombre;
		
		private string _año;
		
		private string _Imagen;
		
		private string _Descripcion;
		
		private string _Duracion;
		
		private System.Nullable<int> _ID_Genero;
		
		private string _Discografica;
		
		private EntitySet<albumfav> _albumfav;
		
		private EntitySet<artistabanda> _artistabanda;
		
		private EntitySet<cancionalbum> _cancionalbum;
		
		private EntityRef<generos> _generos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AlbumChanging(int value);
    partial void OnID_AlbumChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnañoChanging(string value);
    partial void OnañoChanged();
    partial void OnImagenChanging(string value);
    partial void OnImagenChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnDuracionChanging(string value);
    partial void OnDuracionChanged();
    partial void OnID_GeneroChanging(System.Nullable<int> value);
    partial void OnID_GeneroChanged();
    partial void OnDiscograficaChanging(string value);
    partial void OnDiscograficaChanged();
    #endregion
		
		public album()
		{
			this._albumfav = new EntitySet<albumfav>(new Action<albumfav>(this.attach_albumfav), new Action<albumfav>(this.detach_albumfav));
			this._artistabanda = new EntitySet<artistabanda>(new Action<artistabanda>(this.attach_artistabanda), new Action<artistabanda>(this.detach_artistabanda));
			this._cancionalbum = new EntitySet<cancionalbum>(new Action<cancionalbum>(this.attach_cancionalbum), new Action<cancionalbum>(this.detach_cancionalbum));
			this._generos = default(EntityRef<generos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Album", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Album
		{
			get
			{
				return this._ID_Album;
			}
			set
			{
				if ((this._ID_Album != value))
				{
					this.OnID_AlbumChanging(value);
					this.SendPropertyChanging();
					this._ID_Album = value;
					this.SendPropertyChanged("ID_Album");
					this.OnID_AlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(65)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_año", DbType="Char(4)")]
		public string año
		{
			get
			{
				return this._año;
			}
			set
			{
				if ((this._año != value))
				{
					this.OnañoChanging(value);
					this.SendPropertyChanging();
					this._año = value;
					this.SendPropertyChanged("año");
					this.OnañoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagen", DbType="VarChar(255)")]
		public string Imagen
		{
			get
			{
				return this._Imagen;
			}
			set
			{
				if ((this._Imagen != value))
				{
					this.OnImagenChanging(value);
					this.SendPropertyChanging();
					this._Imagen = value;
					this.SendPropertyChanged("Imagen");
					this.OnImagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(500)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duracion", DbType="VarChar(8)")]
		public string Duracion
		{
			get
			{
				return this._Duracion;
			}
			set
			{
				if ((this._Duracion != value))
				{
					this.OnDuracionChanging(value);
					this.SendPropertyChanging();
					this._Duracion = value;
					this.SendPropertyChanged("Duracion");
					this.OnDuracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Genero", DbType="Int")]
		public System.Nullable<int> ID_Genero
		{
			get
			{
				return this._ID_Genero;
			}
			set
			{
				if ((this._ID_Genero != value))
				{
					if (this._generos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GeneroChanging(value);
					this.SendPropertyChanging();
					this._ID_Genero = value;
					this.SendPropertyChanged("ID_Genero");
					this.OnID_GeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discografica", DbType="VarChar(125)")]
		public string Discografica
		{
			get
			{
				return this._Discografica;
			}
			set
			{
				if ((this._Discografica != value))
				{
					this.OnDiscograficaChanging(value);
					this.SendPropertyChanging();
					this._Discografica = value;
					this.SendPropertyChanged("Discografica");
					this.OnDiscograficaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="album_albumfav", Storage="_albumfav", ThisKey="ID_Album", OtherKey="ID_Album")]
		public EntitySet<albumfav> albumfav
		{
			get
			{
				return this._albumfav;
			}
			set
			{
				this._albumfav.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="album_artistabanda", Storage="_artistabanda", ThisKey="ID_Album", OtherKey="ID_Album")]
		public EntitySet<artistabanda> artistabanda
		{
			get
			{
				return this._artistabanda;
			}
			set
			{
				this._artistabanda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="album_cancionalbum", Storage="_cancionalbum", ThisKey="ID_Album", OtherKey="ID_Album")]
		public EntitySet<cancionalbum> cancionalbum
		{
			get
			{
				return this._cancionalbum;
			}
			set
			{
				this._cancionalbum.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="generos_album", Storage="_generos", ThisKey="ID_Genero", OtherKey="ID_Genero", IsForeignKey=true)]
		public generos generos
		{
			get
			{
				return this._generos.Entity;
			}
			set
			{
				generos previousValue = this._generos.Entity;
				if (((previousValue != value) 
							|| (this._generos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._generos.Entity = null;
						previousValue.album.Remove(this);
					}
					this._generos.Entity = value;
					if ((value != null))
					{
						value.album.Add(this);
						this._ID_Genero = value.ID_Genero;
					}
					else
					{
						this._ID_Genero = default(Nullable<int>);
					}
					this.SendPropertyChanged("generos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_albumfav(albumfav entity)
		{
			this.SendPropertyChanging();
			entity.album = this;
		}
		
		private void detach_albumfav(albumfav entity)
		{
			this.SendPropertyChanging();
			entity.album = null;
		}
		
		private void attach_artistabanda(artistabanda entity)
		{
			this.SendPropertyChanging();
			entity.album = this;
		}
		
		private void detach_artistabanda(artistabanda entity)
		{
			this.SendPropertyChanging();
			entity.album = null;
		}
		
		private void attach_cancionalbum(cancionalbum entity)
		{
			this.SendPropertyChanging();
			entity.album = this;
		}
		
		private void detach_cancionalbum(cancionalbum entity)
		{
			this.SendPropertyChanging();
			entity.album = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.albumfav")]
	public partial class albumfav : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Favoritos;
		
		private System.Nullable<int> _ID_Usuario;
		
		private System.Nullable<int> _ID_Album;
		
		private EntityRef<album> _album;
		
		private EntityRef<usuario> _usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FavoritosChanging(int value);
    partial void OnID_FavoritosChanged();
    partial void OnID_UsuarioChanging(System.Nullable<int> value);
    partial void OnID_UsuarioChanged();
    partial void OnID_AlbumChanging(System.Nullable<int> value);
    partial void OnID_AlbumChanged();
    #endregion
		
		public albumfav()
		{
			this._album = default(EntityRef<album>);
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Favoritos", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Favoritos
		{
			get
			{
				return this._ID_Favoritos;
			}
			set
			{
				if ((this._ID_Favoritos != value))
				{
					this.OnID_FavoritosChanging(value);
					this.SendPropertyChanging();
					this._ID_Favoritos = value;
					this.SendPropertyChanged("ID_Favoritos");
					this.OnID_FavoritosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Usuario", DbType="Int")]
		public System.Nullable<int> ID_Usuario
		{
			get
			{
				return this._ID_Usuario;
			}
			set
			{
				if ((this._ID_Usuario != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Usuario = value;
					this.SendPropertyChanged("ID_Usuario");
					this.OnID_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Album", DbType="Int")]
		public System.Nullable<int> ID_Album
		{
			get
			{
				return this._ID_Album;
			}
			set
			{
				if ((this._ID_Album != value))
				{
					if (this._album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AlbumChanging(value);
					this.SendPropertyChanging();
					this._ID_Album = value;
					this.SendPropertyChanged("ID_Album");
					this.OnID_AlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="album_albumfav", Storage="_album", ThisKey="ID_Album", OtherKey="ID_Album", IsForeignKey=true)]
		public album album
		{
			get
			{
				return this._album.Entity;
			}
			set
			{
				album previousValue = this._album.Entity;
				if (((previousValue != value) 
							|| (this._album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._album.Entity = null;
						previousValue.albumfav.Remove(this);
					}
					this._album.Entity = value;
					if ((value != null))
					{
						value.albumfav.Add(this);
						this._ID_Album = value.ID_Album;
					}
					else
					{
						this._ID_Album = default(Nullable<int>);
					}
					this.SendPropertyChanged("album");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_albumfav", Storage="_usuario", ThisKey="ID_Usuario", OtherKey="ID_Usuario", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.albumfav.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.albumfav.Add(this);
						this._ID_Usuario = value.ID_Usuario;
					}
					else
					{
						this._ID_Usuario = default(Nullable<int>);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.artistabanda")]
	public partial class artistabanda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Artista;
		
		private string _Nombre;
		
		private string _imagen;
		
		private System.Nullable<int> _ID_Album;
		
		private EntitySet<integrabanda> _integrabanda;
		
		private EntityRef<album> _album;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ArtistaChanging(int value);
    partial void OnID_ArtistaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnimagenChanging(string value);
    partial void OnimagenChanged();
    partial void OnID_AlbumChanging(System.Nullable<int> value);
    partial void OnID_AlbumChanged();
    #endregion
		
		public artistabanda()
		{
			this._integrabanda = new EntitySet<integrabanda>(new Action<integrabanda>(this.attach_integrabanda), new Action<integrabanda>(this.detach_integrabanda));
			this._album = default(EntityRef<album>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Artista", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Artista
		{
			get
			{
				return this._ID_Artista;
			}
			set
			{
				if ((this._ID_Artista != value))
				{
					this.OnID_ArtistaChanging(value);
					this.SendPropertyChanging();
					this._ID_Artista = value;
					this.SendPropertyChanged("ID_Artista");
					this.OnID_ArtistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(65)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagen", DbType="VarChar(255)")]
		public string imagen
		{
			get
			{
				return this._imagen;
			}
			set
			{
				if ((this._imagen != value))
				{
					this.OnimagenChanging(value);
					this.SendPropertyChanging();
					this._imagen = value;
					this.SendPropertyChanged("imagen");
					this.OnimagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Album", DbType="Int")]
		public System.Nullable<int> ID_Album
		{
			get
			{
				return this._ID_Album;
			}
			set
			{
				if ((this._ID_Album != value))
				{
					if (this._album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AlbumChanging(value);
					this.SendPropertyChanging();
					this._ID_Album = value;
					this.SendPropertyChanged("ID_Album");
					this.OnID_AlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="artistabanda_integrabanda", Storage="_integrabanda", ThisKey="ID_Artista", OtherKey="ID_Artista")]
		public EntitySet<integrabanda> integrabanda
		{
			get
			{
				return this._integrabanda;
			}
			set
			{
				this._integrabanda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="album_artistabanda", Storage="_album", ThisKey="ID_Album", OtherKey="ID_Album", IsForeignKey=true)]
		public album album
		{
			get
			{
				return this._album.Entity;
			}
			set
			{
				album previousValue = this._album.Entity;
				if (((previousValue != value) 
							|| (this._album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._album.Entity = null;
						previousValue.artistabanda.Remove(this);
					}
					this._album.Entity = value;
					if ((value != null))
					{
						value.artistabanda.Add(this);
						this._ID_Album = value.ID_Album;
					}
					else
					{
						this._ID_Album = default(Nullable<int>);
					}
					this.SendPropertyChanged("album");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_integrabanda(integrabanda entity)
		{
			this.SendPropertyChanging();
			entity.artistabanda = this;
		}
		
		private void detach_integrabanda(integrabanda entity)
		{
			this.SendPropertyChanging();
			entity.artistabanda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cancionalbum")]
	public partial class cancionalbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CancionAlbum;
		
		private System.Nullable<int> _ID_Cancion;
		
		private System.Nullable<int> _ID_Album;
		
		private EntityRef<album> _album;
		
		private EntityRef<canciones> _canciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CancionAlbumChanging(int value);
    partial void OnID_CancionAlbumChanged();
    partial void OnID_CancionChanging(System.Nullable<int> value);
    partial void OnID_CancionChanged();
    partial void OnID_AlbumChanging(System.Nullable<int> value);
    partial void OnID_AlbumChanged();
    #endregion
		
		public cancionalbum()
		{
			this._album = default(EntityRef<album>);
			this._canciones = default(EntityRef<canciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CancionAlbum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CancionAlbum
		{
			get
			{
				return this._ID_CancionAlbum;
			}
			set
			{
				if ((this._ID_CancionAlbum != value))
				{
					this.OnID_CancionAlbumChanging(value);
					this.SendPropertyChanging();
					this._ID_CancionAlbum = value;
					this.SendPropertyChanged("ID_CancionAlbum");
					this.OnID_CancionAlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cancion", DbType="Int")]
		public System.Nullable<int> ID_Cancion
		{
			get
			{
				return this._ID_Cancion;
			}
			set
			{
				if ((this._ID_Cancion != value))
				{
					if (this._canciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CancionChanging(value);
					this.SendPropertyChanging();
					this._ID_Cancion = value;
					this.SendPropertyChanged("ID_Cancion");
					this.OnID_CancionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Album", DbType="Int")]
		public System.Nullable<int> ID_Album
		{
			get
			{
				return this._ID_Album;
			}
			set
			{
				if ((this._ID_Album != value))
				{
					if (this._album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AlbumChanging(value);
					this.SendPropertyChanging();
					this._ID_Album = value;
					this.SendPropertyChanged("ID_Album");
					this.OnID_AlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="album_cancionalbum", Storage="_album", ThisKey="ID_Album", OtherKey="ID_Album", IsForeignKey=true)]
		public album album
		{
			get
			{
				return this._album.Entity;
			}
			set
			{
				album previousValue = this._album.Entity;
				if (((previousValue != value) 
							|| (this._album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._album.Entity = null;
						previousValue.cancionalbum.Remove(this);
					}
					this._album.Entity = value;
					if ((value != null))
					{
						value.cancionalbum.Add(this);
						this._ID_Album = value.ID_Album;
					}
					else
					{
						this._ID_Album = default(Nullable<int>);
					}
					this.SendPropertyChanged("album");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="canciones_cancionalbum", Storage="_canciones", ThisKey="ID_Cancion", OtherKey="ID_Cancion", IsForeignKey=true)]
		public canciones canciones
		{
			get
			{
				return this._canciones.Entity;
			}
			set
			{
				canciones previousValue = this._canciones.Entity;
				if (((previousValue != value) 
							|| (this._canciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._canciones.Entity = null;
						previousValue.cancionalbum.Remove(this);
					}
					this._canciones.Entity = value;
					if ((value != null))
					{
						value.cancionalbum.Add(this);
						this._ID_Cancion = value.ID_Cancion;
					}
					else
					{
						this._ID_Cancion = default(Nullable<int>);
					}
					this.SendPropertyChanged("canciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.canciones")]
	public partial class canciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Cancion;
		
		private string _Nombre;
		
		private string _URL;
		
		private EntitySet<cancionalbum> _cancionalbum;
		
		private EntitySet<playlistcancion> _playlistcancion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CancionChanging(int value);
    partial void OnID_CancionChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
		
		public canciones()
		{
			this._cancionalbum = new EntitySet<cancionalbum>(new Action<cancionalbum>(this.attach_cancionalbum), new Action<cancionalbum>(this.detach_cancionalbum));
			this._playlistcancion = new EntitySet<playlistcancion>(new Action<playlistcancion>(this.attach_playlistcancion), new Action<playlistcancion>(this.detach_playlistcancion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cancion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Cancion
		{
			get
			{
				return this._ID_Cancion;
			}
			set
			{
				if ((this._ID_Cancion != value))
				{
					this.OnID_CancionChanging(value);
					this.SendPropertyChanging();
					this._ID_Cancion = value;
					this.SendPropertyChanged("ID_Cancion");
					this.OnID_CancionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(70)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(300)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="canciones_cancionalbum", Storage="_cancionalbum", ThisKey="ID_Cancion", OtherKey="ID_Cancion")]
		public EntitySet<cancionalbum> cancionalbum
		{
			get
			{
				return this._cancionalbum;
			}
			set
			{
				this._cancionalbum.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="canciones_playlistcancion", Storage="_playlistcancion", ThisKey="ID_Cancion", OtherKey="ID_Cancion")]
		public EntitySet<playlistcancion> playlistcancion
		{
			get
			{
				return this._playlistcancion;
			}
			set
			{
				this._playlistcancion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cancionalbum(cancionalbum entity)
		{
			this.SendPropertyChanging();
			entity.canciones = this;
		}
		
		private void detach_cancionalbum(cancionalbum entity)
		{
			this.SendPropertyChanging();
			entity.canciones = null;
		}
		
		private void attach_playlistcancion(playlistcancion entity)
		{
			this.SendPropertyChanging();
			entity.canciones = this;
		}
		
		private void detach_playlistcancion(playlistcancion entity)
		{
			this.SendPropertyChanging();
			entity.canciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.generos")]
	public partial class generos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Genero;
		
		private string _GeneroNombre;
		
		private EntitySet<album> _album;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GeneroChanging(int value);
    partial void OnID_GeneroChanged();
    partial void OnGeneroNombreChanging(string value);
    partial void OnGeneroNombreChanged();
    #endregion
		
		public generos()
		{
			this._album = new EntitySet<album>(new Action<album>(this.attach_album), new Action<album>(this.detach_album));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Genero", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Genero
		{
			get
			{
				return this._ID_Genero;
			}
			set
			{
				if ((this._ID_Genero != value))
				{
					this.OnID_GeneroChanging(value);
					this.SendPropertyChanging();
					this._ID_Genero = value;
					this.SendPropertyChanged("ID_Genero");
					this.OnID_GeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneroNombre", DbType="VarChar(120)")]
		public string GeneroNombre
		{
			get
			{
				return this._GeneroNombre;
			}
			set
			{
				if ((this._GeneroNombre != value))
				{
					this.OnGeneroNombreChanging(value);
					this.SendPropertyChanging();
					this._GeneroNombre = value;
					this.SendPropertyChanged("GeneroNombre");
					this.OnGeneroNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="generos_album", Storage="_album", ThisKey="ID_Genero", OtherKey="ID_Genero")]
		public EntitySet<album> album
		{
			get
			{
				return this._album;
			}
			set
			{
				this._album.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_album(album entity)
		{
			this.SendPropertyChanging();
			entity.generos = this;
		}
		
		private void detach_album(album entity)
		{
			this.SendPropertyChanging();
			entity.generos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.integrabanda")]
	public partial class integrabanda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_integrabanda;
		
		private string _Persona;
		
		private System.Nullable<int> _ID_Artista;
		
		private EntityRef<artistabanda> _artistabanda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_integrabandaChanging(int value);
    partial void OnID_integrabandaChanged();
    partial void OnPersonaChanging(string value);
    partial void OnPersonaChanged();
    partial void OnID_ArtistaChanging(System.Nullable<int> value);
    partial void OnID_ArtistaChanged();
    #endregion
		
		public integrabanda()
		{
			this._artistabanda = default(EntityRef<artistabanda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_integrabanda", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_integrabanda
		{
			get
			{
				return this._ID_integrabanda;
			}
			set
			{
				if ((this._ID_integrabanda != value))
				{
					this.OnID_integrabandaChanging(value);
					this.SendPropertyChanging();
					this._ID_integrabanda = value;
					this.SendPropertyChanged("ID_integrabanda");
					this.OnID_integrabandaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Persona", DbType="VarChar(65)")]
		public string Persona
		{
			get
			{
				return this._Persona;
			}
			set
			{
				if ((this._Persona != value))
				{
					this.OnPersonaChanging(value);
					this.SendPropertyChanging();
					this._Persona = value;
					this.SendPropertyChanged("Persona");
					this.OnPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Artista", DbType="Int")]
		public System.Nullable<int> ID_Artista
		{
			get
			{
				return this._ID_Artista;
			}
			set
			{
				if ((this._ID_Artista != value))
				{
					if (this._artistabanda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ArtistaChanging(value);
					this.SendPropertyChanging();
					this._ID_Artista = value;
					this.SendPropertyChanged("ID_Artista");
					this.OnID_ArtistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="artistabanda_integrabanda", Storage="_artistabanda", ThisKey="ID_Artista", OtherKey="ID_Artista", IsForeignKey=true)]
		public artistabanda artistabanda
		{
			get
			{
				return this._artistabanda.Entity;
			}
			set
			{
				artistabanda previousValue = this._artistabanda.Entity;
				if (((previousValue != value) 
							|| (this._artistabanda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._artistabanda.Entity = null;
						previousValue.integrabanda.Remove(this);
					}
					this._artistabanda.Entity = value;
					if ((value != null))
					{
						value.integrabanda.Add(this);
						this._ID_Artista = value.ID_Artista;
					}
					else
					{
						this._ID_Artista = default(Nullable<int>);
					}
					this.SendPropertyChanged("artistabanda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.playlist")]
	public partial class playlist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Playlist;
		
		private string _Nombre;
		
		private System.Nullable<int> _ID_Usuario;
		
		private EntitySet<playlistcancion> _playlistcancion;
		
		private EntityRef<usuario> _usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PlaylistChanging(int value);
    partial void OnID_PlaylistChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnID_UsuarioChanging(System.Nullable<int> value);
    partial void OnID_UsuarioChanged();
    #endregion
		
		public playlist()
		{
			this._playlistcancion = new EntitySet<playlistcancion>(new Action<playlistcancion>(this.attach_playlistcancion), new Action<playlistcancion>(this.detach_playlistcancion));
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Playlist", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Playlist
		{
			get
			{
				return this._ID_Playlist;
			}
			set
			{
				if ((this._ID_Playlist != value))
				{
					this.OnID_PlaylistChanging(value);
					this.SendPropertyChanging();
					this._ID_Playlist = value;
					this.SendPropertyChanged("ID_Playlist");
					this.OnID_PlaylistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(65)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Usuario", DbType="Int")]
		public System.Nullable<int> ID_Usuario
		{
			get
			{
				return this._ID_Usuario;
			}
			set
			{
				if ((this._ID_Usuario != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Usuario = value;
					this.SendPropertyChanged("ID_Usuario");
					this.OnID_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="playlist_playlistcancion", Storage="_playlistcancion", ThisKey="ID_Playlist", OtherKey="ID_Playlist")]
		public EntitySet<playlistcancion> playlistcancion
		{
			get
			{
				return this._playlistcancion;
			}
			set
			{
				this._playlistcancion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_playlist", Storage="_usuario", ThisKey="ID_Usuario", OtherKey="ID_Usuario", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.playlist.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.playlist.Add(this);
						this._ID_Usuario = value.ID_Usuario;
					}
					else
					{
						this._ID_Usuario = default(Nullable<int>);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_playlistcancion(playlistcancion entity)
		{
			this.SendPropertyChanging();
			entity.playlist = this;
		}
		
		private void detach_playlistcancion(playlistcancion entity)
		{
			this.SendPropertyChanging();
			entity.playlist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.playlistcancion")]
	public partial class playlistcancion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PlayCan;
		
		private System.Nullable<int> _ID_Playlist;
		
		private System.Nullable<int> _ID_Cancion;
		
		private EntityRef<canciones> _canciones;
		
		private EntityRef<playlist> _playlist;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PlayCanChanging(int value);
    partial void OnID_PlayCanChanged();
    partial void OnID_PlaylistChanging(System.Nullable<int> value);
    partial void OnID_PlaylistChanged();
    partial void OnID_CancionChanging(System.Nullable<int> value);
    partial void OnID_CancionChanged();
    #endregion
		
		public playlistcancion()
		{
			this._canciones = default(EntityRef<canciones>);
			this._playlist = default(EntityRef<playlist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PlayCan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PlayCan
		{
			get
			{
				return this._ID_PlayCan;
			}
			set
			{
				if ((this._ID_PlayCan != value))
				{
					this.OnID_PlayCanChanging(value);
					this.SendPropertyChanging();
					this._ID_PlayCan = value;
					this.SendPropertyChanged("ID_PlayCan");
					this.OnID_PlayCanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Playlist", DbType="Int")]
		public System.Nullable<int> ID_Playlist
		{
			get
			{
				return this._ID_Playlist;
			}
			set
			{
				if ((this._ID_Playlist != value))
				{
					if (this._playlist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PlaylistChanging(value);
					this.SendPropertyChanging();
					this._ID_Playlist = value;
					this.SendPropertyChanged("ID_Playlist");
					this.OnID_PlaylistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cancion", DbType="Int")]
		public System.Nullable<int> ID_Cancion
		{
			get
			{
				return this._ID_Cancion;
			}
			set
			{
				if ((this._ID_Cancion != value))
				{
					if (this._canciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CancionChanging(value);
					this.SendPropertyChanging();
					this._ID_Cancion = value;
					this.SendPropertyChanged("ID_Cancion");
					this.OnID_CancionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="canciones_playlistcancion", Storage="_canciones", ThisKey="ID_Cancion", OtherKey="ID_Cancion", IsForeignKey=true)]
		public canciones canciones
		{
			get
			{
				return this._canciones.Entity;
			}
			set
			{
				canciones previousValue = this._canciones.Entity;
				if (((previousValue != value) 
							|| (this._canciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._canciones.Entity = null;
						previousValue.playlistcancion.Remove(this);
					}
					this._canciones.Entity = value;
					if ((value != null))
					{
						value.playlistcancion.Add(this);
						this._ID_Cancion = value.ID_Cancion;
					}
					else
					{
						this._ID_Cancion = default(Nullable<int>);
					}
					this.SendPropertyChanged("canciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="playlist_playlistcancion", Storage="_playlist", ThisKey="ID_Playlist", OtherKey="ID_Playlist", IsForeignKey=true)]
		public playlist playlist
		{
			get
			{
				return this._playlist.Entity;
			}
			set
			{
				playlist previousValue = this._playlist.Entity;
				if (((previousValue != value) 
							|| (this._playlist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._playlist.Entity = null;
						previousValue.playlistcancion.Remove(this);
					}
					this._playlist.Entity = value;
					if ((value != null))
					{
						value.playlistcancion.Add(this);
						this._ID_Playlist = value.ID_Playlist;
					}
					else
					{
						this._ID_Playlist = default(Nullable<int>);
					}
					this.SendPropertyChanged("playlist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysdiagrams")]
	public partial class sysdiagrams : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private int _principal_id;
		
		private int _diagram_id;
		
		private System.Nullable<int> _version;
		
		private System.Data.Linq.Binary _definition;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onprincipal_idChanging(int value);
    partial void Onprincipal_idChanged();
    partial void Ondiagram_idChanging(int value);
    partial void Ondiagram_idChanged();
    partial void OnversionChanging(System.Nullable<int> value);
    partial void OnversionChanged();
    partial void OndefinitionChanging(System.Data.Linq.Binary value);
    partial void OndefinitionChanged();
    #endregion
		
		public sysdiagrams()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_principal_id", DbType="Int NOT NULL")]
		public int principal_id
		{
			get
			{
				return this._principal_id;
			}
			set
			{
				if ((this._principal_id != value))
				{
					this.Onprincipal_idChanging(value);
					this.SendPropertyChanging();
					this._principal_id = value;
					this.SendPropertyChanged("principal_id");
					this.Onprincipal_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagram_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int diagram_id
		{
			get
			{
				return this._diagram_id;
			}
			set
			{
				if ((this._diagram_id != value))
				{
					this.Ondiagram_idChanging(value);
					this.SendPropertyChanging();
					this._diagram_id = value;
					this.SendPropertyChanged("diagram_id");
					this.Ondiagram_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="Int")]
		public System.Nullable<int> version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_definition", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary definition
		{
			get
			{
				return this._definition;
			}
			set
			{
				if ((this._definition != value))
				{
					this.OndefinitionChanging(value);
					this.SendPropertyChanging();
					this._definition = value;
					this.SendPropertyChanged("definition");
					this.OndefinitionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Usuario;
		
		private string _Contraseña;
		
		private string _Correo;
		
		private string _Usuario1;
		
		private EntitySet<albumfav> _albumfav;
		
		private EntitySet<playlist> _playlist;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UsuarioChanging(int value);
    partial void OnID_UsuarioChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    #endregion
		
		public usuario()
		{
			this._albumfav = new EntitySet<albumfav>(new Action<albumfav>(this.attach_albumfav), new Action<albumfav>(this.detach_albumfav));
			this._playlist = new EntitySet<playlist>(new Action<playlist>(this.attach_playlist), new Action<playlist>(this.detach_playlist));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Usuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Usuario
		{
			get
			{
				return this._ID_Usuario;
			}
			set
			{
				if ((this._ID_Usuario != value))
				{
					this.OnID_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Usuario = value;
					this.SendPropertyChanged("ID_Usuario");
					this.OnID_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="VarChar(55)")]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(55)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="VarChar(40)")]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_albumfav", Storage="_albumfav", ThisKey="ID_Usuario", OtherKey="ID_Usuario")]
		public EntitySet<albumfav> albumfav
		{
			get
			{
				return this._albumfav;
			}
			set
			{
				this._albumfav.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_playlist", Storage="_playlist", ThisKey="ID_Usuario", OtherKey="ID_Usuario")]
		public EntitySet<playlist> playlist
		{
			get
			{
				return this._playlist;
			}
			set
			{
				this._playlist.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_albumfav(albumfav entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_albumfav(albumfav entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
		
		private void attach_playlist(playlist entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_playlist(playlist entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
	}
}
#pragma warning restore 1591
